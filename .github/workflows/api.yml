name: API Build, Test and Deploy

on:
  push:
    branches: [ main ]
    paths:
      - '241RunnersAwarenessAPI/**'
      - '.github/workflows/api.yml'
  pull_request:
    branches: [ main ]
    paths:
      - '241RunnersAwarenessAPI/**'
      - '.github/workflows/api.yml'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          
      - name: Restore dependencies
        run: dotnet restore 241RunnersAwarenessAPI/241RunnersAwarenessAPI.csproj
        
      - name: Build project
        run: dotnet build 241RunnersAwarenessAPI/241RunnersAwarenessAPI.csproj --configuration Release --no-restore
        
      - name: Run tests
        run: |
          # Find and run test projects
          find . -name "*.Tests.csproj" -o -name "*Test*.csproj" | while read testproj; do
            echo "Running tests in $testproj"
            dotnet test "$testproj" --configuration Release --no-build --verbosity normal
          done
          
      - name: Run security scan
        run: |
          # Install security scanning tools
          dotnet tool install --global security-scan
          
          # Run security scan
          security-scan 241RunnersAwarenessAPI/241RunnersAwarenessAPI.csproj || true
          
      - name: Check for secrets
        run: |
          echo "Checking for hardcoded secrets..."
          if grep -r "password.*=" 241RunnersAwarenessAPI/ --include="*.cs" --include="*.json" | grep -v "example" | grep -v "test"; then
            echo "❌ Potential hardcoded passwords found"
            exit 1
          fi
          
          if grep -r "connection.*string" 241RunnersAwarenessAPI/ --include="*.cs" --include="*.json" | grep -v "example" | grep -v "test"; then
            echo "❌ Potential hardcoded connection strings found"
            exit 1
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          
      - name: Restore dependencies
        run: dotnet restore 241RunnersAwarenessAPI/241RunnersAwarenessAPI.csproj
        
      - name: Build for production
        run: dotnet build 241RunnersAwarenessAPI/241RunnersAwarenessAPI.csproj --configuration Release --no-restore
        
      - name: Publish application
        run: |
          dotnet publish 241RunnersAwarenessAPI/241RunnersAwarenessAPI.csproj \
            --configuration Release \
            --output ./publish \
            --no-build \
            --self-contained false \
            --runtime linux-x64
            
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: '241runners-api'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ./publish
          
      - name: Health check
        run: |
          echo "Waiting for deployment to complete..."
          sleep 30
          
          echo "Testing health endpoint..."
          curl -f https://241runners-api.azurewebsites.net/healthz || exit 1
          
          echo "Testing readiness endpoint..."
          curl -f https://241runners-api.azurewebsites.net/readyz || exit 1
          
      - name: Update deployment status
        run: |
          echo "✅ API deployed successfully"
          echo "🌐 API: https://241runners-api.azurewebsites.net"
          echo "🔍 Health: https://241runners-api.azurewebsites.net/healthz"
          echo "📊 Ready: https://241runners-api.azurewebsites.net/readyz"

  integration-test:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install test dependencies
        run: |
          npm install --save-dev jest supertest
          
      - name: Run integration tests
        run: |
          # Create simple integration test
          cat > integration-test.js << 'EOF'
          const https = require('https');
          
          function makeRequest(url) {
            return new Promise((resolve, reject) => {
              https.get(url, (res) => {
                let data = '';
                res.on('data', chunk => data += chunk);
                res.on('end', () => {
                  try {
                    const json = JSON.parse(data);
                    resolve({ status: res.statusCode, data: json });
                  } catch (e) {
                    resolve({ status: res.statusCode, data: data });
                  }
                });
              }).on('error', reject);
            });
          }
          
          async function runTests() {
            console.log('🧪 Running integration tests...');
            
            // Test health endpoint
            const health = await makeRequest('https://241runners-api.azurewebsites.net/healthz');
            if (health.status !== 200) {
              throw new Error(`Health check failed: ${health.status}`);
            }
            console.log('✅ Health check passed');
            
            // Test readiness endpoint
            const ready = await makeRequest('https://241runners-api.azurewebsites.net/readyz');
            if (ready.status !== 200) {
              throw new Error(`Readiness check failed: ${ready.status}`);
            }
            console.log('✅ Readiness check passed');
            
            console.log('🎉 All integration tests passed!');
          }
          
          runTests().catch(console.error);
          EOF
          
          node integration-test.js