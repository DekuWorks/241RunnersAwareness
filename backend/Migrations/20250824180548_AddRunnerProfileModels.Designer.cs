// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _241RunnersAwareness.BackendAPI.DBContext.Data;

#nullable disable

namespace _241RunnersAwareness.BackendAPI.Migrations
{
    [DbContext(typeof(RunnersDbContext))]
    [Migration("20250824180548_AddRunnerProfileModels")]
    partial class AddRunnerProfileModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("IndividualId")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<double?>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("Metadata")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int?>("RelatedCaseId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RelatedPhotoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActivityType")
                        .HasDatabaseName("IX_Activities_ActivityType");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Activities_CreatedAt");

                    b.HasIndex("IndividualId")
                        .HasDatabaseName("IX_Activities_IndividualId");

                    b.HasIndex("RelatedCaseId")
                        .HasDatabaseName("IX_Activities_RelatedCaseId");

                    b.HasIndex("RelatedPhotoId")
                        .HasDatabaseName("IX_Activities_RelatedPhotoId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.AlertLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlertMessage")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int?>("AlertRadiusMiles")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlertStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AlertTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("AlertTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("AlertType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("IndividualId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUrgent")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<double?>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("ResolutionNotes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("ResolvedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ResolvedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IndividualId");

                    b.ToTable("AlertLog");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CampaignType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CurrentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("GoalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Case", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CaseNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Circumstances")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EnableAlerts")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EnableMediaOutreach")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EnablePublicSharing")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IndividualId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IndividualId1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InvestigatingAgency")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("InvestigatorContact")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("InvestigatorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUrgent")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastSeenDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastSeenLocation")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<string>("LawEnforcementCaseNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<double?>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("MediaContacts")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OwnerUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("PublicSlug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ResolutionNotes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ResolvedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RiskLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("SearchRadiusMiles")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SocialMediaHandles")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CaseNumber")
                        .IsUnique()
                        .HasDatabaseName("IX_Cases_CaseNumber");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Cases_CreatedAt");

                    b.HasIndex("IndividualId");

                    b.HasIndex("IndividualId1");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_Cases_IsActive");

                    b.HasIndex("IsPublic")
                        .HasDatabaseName("IX_Cases_IsPublic");

                    b.HasIndex("LastUpdatedAt")
                        .HasDatabaseName("IX_Cases_LastUpdatedAt");

                    b.HasIndex("OwnerUserId")
                        .HasDatabaseName("IX_Cases_OwnerUserId");

                    b.HasIndex("PublicSlug")
                        .IsUnique()
                        .HasDatabaseName("IX_Cases_PublicSlug");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_Cases_Status");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.CaseDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("DocumentUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("IndividualId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UploadedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IndividualId");

                    b.ToTable("CaseDocuments");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.CaseImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("IndividualId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UploadedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IndividualId");

                    b.ToTable("CaseImages");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.CaseUpdate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CaseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUrgent")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<double?>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<bool>("NotificationsSent")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("RequiresNotification")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdateType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CaseId")
                        .HasDatabaseName("IX_CaseUpdates_CaseId");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_CaseUpdates_CreatedAt");

                    b.HasIndex("CreatedByUserId")
                        .HasDatabaseName("IX_CaseUpdates_CreatedByUserId");

                    b.HasIndex("IsPublic")
                        .HasDatabaseName("IX_CaseUpdates_IsPublic");

                    b.HasIndex("UpdateType")
                        .HasDatabaseName("IX_CaseUpdates_UpdateType");

                    b.ToTable("CaseUpdates");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.CaseUpdateMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CaseUpdateId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<long?>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MediaType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("MediaUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalFilename")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("UploadedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CaseUpdateId")
                        .HasDatabaseName("IX_CaseUpdateMedia_CaseUpdateId");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_CaseUpdateMedia_CreatedAt");

                    b.HasIndex("MediaType")
                        .HasDatabaseName("IX_CaseUpdateMedia_MediaType");

                    b.ToTable("CaseUpdateMedia");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.DNAReport", b =>
                {
                    b.Property<Guid>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BehaviorDescription")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ClothingDescription")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("DNALabReference")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("DNASampleCollected")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DNASampleCollectionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DNASampleDescription")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("DNASampleLocation")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("DNASampleMatched")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DNASampleProcessed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DNASampleType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("DNASequence")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("IndividualId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhysicalDescription")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReportTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReporterUserId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ResolutionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ResolutionNotes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("ResolvedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("WeatherConditions")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("WitnessEmail")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("WitnessName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("WitnessPhone")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("ReportId");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_DNAReports_CreatedAt");

                    b.HasIndex("IndividualId")
                        .HasDatabaseName("IX_DNAReports_IndividualId");

                    b.HasIndex("ReportDate")
                        .HasDatabaseName("IX_DNAReports_ReportDate");

                    b.HasIndex("ReporterUserId")
                        .HasDatabaseName("IX_DNAReports_ReporterUserId");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_DNAReports_Status");

                    b.ToTable("DNAReports");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.EmergencyContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("IndividualId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Relationship")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IndividualId");

                    b.ToTable("EmergencyContacts");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Individual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AACDeviceType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("AdoptionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("AlertRadius")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("AlertRadiusMiles")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Allergies")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("BehavioralTriggers")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("CalmingTechniques")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("CaregiverEmail")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CaregiverName")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("CaregiverPhone")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("CaseStatus")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Circumstances")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CommunicationMethod")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CommunicationNeeds")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentStatus")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("DNALabReference")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("DNASample")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DNASampleDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DNASampleType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("DNASequence")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("DentalRecords")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("DisabilityDescription")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("DistinguishingFeatures")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("DriverLicenseNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmergencyResponseInstructions")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool?>("EnableEmailAlerts")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("EnablePushNotifications")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("EnableRealTimeAlerts")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("EnableSMSAlerts")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EyeColor")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("FingerprintData")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("GPSDeviceID")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("GPSDeviceType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("HairColor")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool?>("HasAsthma")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("HasBeenAdopted")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("HasDiabetes")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("HasGPSDevice")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("HasHearingImpairment")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("HasHeartCondition")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("HasMedicalID")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("HasSeizureDisorder")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("HasSensoryProcessingDisorder")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("HasVisualImpairment")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Height")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("InvestigatingAgency")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("InvestigatorName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("InvestigatorPhone")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsAtImmediateRisk")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsAttractedToBrightLights")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsAttractedToRoads")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsAttractedToWater")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsNonVerbal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastKnownAddress")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastSeenDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastSeenLocation")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<double?>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<string>("LocalCaseNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<double?>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<bool?>("MayWanderOrElope")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MediaReferences")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("MedicalConditions")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("MedicalIDNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("MedicalRecords")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("MedicationSchedule")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Medications")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("MobilityDeviceType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("MobilityStatus")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("NAMUSCaseNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OwnerUserId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OwnerUserUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PassportNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("PlacementStatus")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PreferredEmergencyContact")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("PreferredLocations")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("PrimaryDisability")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool?>("RequiresMedication")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RiskFactors")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("RiskLevel")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("RunnerId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("SeizureTriggers")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("SensoryComforts")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("SensoryTriggers")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool?>("ShouldCall911")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SocialMediaPosts")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("SocialSecurityNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("SpecialInstructionsForFirstResponders")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("SpecialNeeds")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("SpecialNeedsDescription")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("SupportOrganization")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("SupportOrganizationPhone")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool?>("UsesAACDevice")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("UsesMobilityDevice")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("UsesWheelchair")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WanderingPatterns")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Weight")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CaseStatus")
                        .HasDatabaseName("IX_Individuals_CaseStatus");

                    b.HasIndex("City")
                        .HasDatabaseName("IX_Individuals_City");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Individuals_CreatedAt");

                    b.HasIndex("LastSeenDate")
                        .HasDatabaseName("IX_Individuals_LastSeenDate");

                    b.HasIndex("LocalCaseNumber")
                        .HasDatabaseName("IX_Individuals_LocalCaseNumber");

                    b.HasIndex("NAMUSCaseNumber")
                        .HasDatabaseName("IX_Individuals_NAMUSCaseNumber");

                    b.HasIndex("OwnerUserUserId");

                    b.HasIndex("State")
                        .HasDatabaseName("IX_Individuals_State");

                    b.HasIndex("FirstName", "LastName")
                        .HasDatabaseName("IX_Individuals_Name");

                    b.ToTable("Individuals");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerPhone")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DonationAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShippingAddress")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("ShippingCity")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ShippingCountry")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ShippingState")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("ShippingZipCode")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrackingNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("DonationAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProductVariantId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VariantName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductVariantId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Partnership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("PartnerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PartnerWebsite")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("PartnershipType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Terms")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Partnerships");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Caption")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("ContentType")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<long?>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("IndividualId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UploadedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IndividualId")
                        .HasDatabaseName("IX_Photos_IndividualId");

                    b.HasIndex("IsPrimary")
                        .HasDatabaseName("IX_Photos_IsPrimary");

                    b.HasIndex("UploadedAt")
                        .HasDatabaseName("IX_Photos_UploadedAt");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AllowBackorders")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AwarenessType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Barcode")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("CampaignId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Collection")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CompareAtPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("DimensionUnit")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("DonationAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DonationPercentage")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageUrls")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsOnSale")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LongDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int?>("MaxOrderQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int?>("MinOrderQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MissionStatement")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("PartnerOrganization")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int?>("PartnershipId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SKU")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Size")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Slug")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Subcategory")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Tags")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("TrackInventory")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WeightUnit")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("PartnershipId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AltText")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.ProductReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductReviews");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.ProductVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SKU")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Size")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Style")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductVariants");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Credentials")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EmailVerificationExpiry")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailVerificationToken")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailVerified")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmergencyContactName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmergencyContactPhone")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmergencyContactRelationship")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("IndividualId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastPasswordResetAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("LicenseNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Organization")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PasswordResetCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordResetToken")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PasswordResetTokenExpiry")
                        .HasColumnType("TEXT");

                    b.Property<int>("PasswordResetYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneVerificationCode")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PhoneVerificationExpiry")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneVerified")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RefreshTokenExpiry")
                        .HasColumnType("TEXT");

                    b.Property<string>("RelationshipToRunner")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Specialization")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("TwoFactorBackupCodes")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TwoFactorSecret")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TwoFactorSetupDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("YearsOfExperience")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Users_CreatedAt");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Users_Email");

                    b.HasIndex("IndividualId");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_Users_IsActive");

                    b.HasIndex("Role")
                        .HasDatabaseName("IX_Users_Role");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("IX_Users_Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Activity", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Individual", "Individual")
                        .WithMany("Activities")
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Case", "RelatedCase")
                        .WithMany()
                        .HasForeignKey("RelatedCaseId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Photo", "RelatedPhoto")
                        .WithMany()
                        .HasForeignKey("RelatedPhotoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Individual");

                    b.Navigation("RelatedCase");

                    b.Navigation("RelatedPhoto");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.AlertLog", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Individual", "Individual")
                        .WithMany("AlertLogs")
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Individual");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Case", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Individual", "Individual")
                        .WithMany()
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Individual", null)
                        .WithMany("Cases")
                        .HasForeignKey("IndividualId1");

                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.User", "OwnerUser")
                        .WithMany()
                        .HasForeignKey("OwnerUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Individual");

                    b.Navigation("OwnerUser");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.CaseDocument", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Individual", "Individual")
                        .WithMany("Documents")
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Individual");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.CaseImage", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Individual", "Individual")
                        .WithMany("Images")
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Individual");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.CaseUpdate", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Case", "Case")
                        .WithMany("Updates")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Case");

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.CaseUpdateMedia", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.CaseUpdate", "CaseUpdate")
                        .WithMany("Media")
                        .HasForeignKey("CaseUpdateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CaseUpdate");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.DNAReport", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Individual", "Individual")
                        .WithMany()
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.User", "Reporter")
                        .WithMany()
                        .HasForeignKey("ReporterUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Individual");

                    b.Navigation("Reporter");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.EmergencyContact", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Individual", "Individual")
                        .WithMany("EmergencyContacts")
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Individual");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Individual", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.User", "OwnerUser")
                        .WithMany()
                        .HasForeignKey("OwnerUserUserId");

                    b.Navigation("OwnerUser");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.OrderItem", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.ProductVariant", "Variant")
                        .WithMany()
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("Variant");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Photo", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Individual", "Individual")
                        .WithMany("Photos")
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Individual");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Product", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Campaign", null)
                        .WithMany("Products")
                        .HasForeignKey("CampaignId");

                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Partnership", null)
                        .WithMany("Products")
                        .HasForeignKey("PartnershipId");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.ProductImage", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.ProductReview", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.ProductVariant", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Product", "Product")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.User", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Individual", "Individual")
                        .WithMany()
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Individual");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Campaign", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Case", b =>
                {
                    b.Navigation("Updates");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.CaseUpdate", b =>
                {
                    b.Navigation("Media");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Individual", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("AlertLogs");

                    b.Navigation("Cases");

                    b.Navigation("Documents");

                    b.Navigation("EmergencyContacts");

                    b.Navigation("Images");

                    b.Navigation("Photos");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Partnership", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Reviews");

                    b.Navigation("Variants");
                });
#pragma warning restore 612, 618
        }
    }
}
