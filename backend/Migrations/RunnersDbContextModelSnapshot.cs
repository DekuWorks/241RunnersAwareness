// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _241RunnersAwareness.BackendAPI.DBContext.Data;

#nullable disable

namespace _241RunnersAwareness.BackendAPI.Migrations
{
    [DbContext(typeof(RunnersDbContext))]
    partial class RunnersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CampaignType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CurrentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("GoalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.CaseDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("DocumentUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("IndividualId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UploadedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IndividualId");

                    b.ToTable("CaseDocuments");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.CaseImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("IndividualId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UploadedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IndividualId");

                    b.ToTable("CaseImages");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.EmergencyContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("IndividualId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Relationship")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IndividualId");

                    b.ToTable("EmergencyContacts");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Individual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("AdoptionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Allergies")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("CaseStatus")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Circumstances")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentStatus")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("DNALabReference")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("DNASample")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DNASampleDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DNASampleType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("DNASequence")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("DentalRecords")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("DistinguishingFeatures")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("DriverLicenseNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("EyeColor")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("FingerprintData")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("HairColor")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool?>("HasBeenAdopted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Height")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("InvestigatingAgency")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("InvestigatorName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("InvestigatorPhone")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastKnownAddress")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastSeenDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastSeenLocation")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<double?>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<string>("LocalCaseNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<double?>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("MediaReferences")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("MedicalConditions")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("MedicalRecords")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Medications")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("NAMUSCaseNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("PassportNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("PlacementStatus")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("SocialMediaPosts")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("SocialSecurityNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("SpecialNeeds")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("SpecialNeedsDescription")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Weight")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CaseStatus")
                        .HasDatabaseName("IX_Individuals_CaseStatus");

                    b.HasIndex("City")
                        .HasDatabaseName("IX_Individuals_City");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Individuals_CreatedAt");

                    b.HasIndex("LastSeenDate")
                        .HasDatabaseName("IX_Individuals_LastSeenDate");

                    b.HasIndex("LocalCaseNumber")
                        .HasDatabaseName("IX_Individuals_LocalCaseNumber");

                    b.HasIndex("NAMUSCaseNumber")
                        .HasDatabaseName("IX_Individuals_NAMUSCaseNumber");

                    b.HasIndex("State")
                        .HasDatabaseName("IX_Individuals_State");

                    b.HasIndex("FirstName", "LastName")
                        .HasDatabaseName("IX_Individuals_Name");

                    b.ToTable("Individuals");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerPhone")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DonationAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShippingAddress")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("ShippingCity")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ShippingCountry")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ShippingState")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("ShippingZipCode")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrackingNumber")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("DonationAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProductVariantId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VariantName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductVariantId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Partnership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("PartnerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PartnerWebsite")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("PartnershipType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Terms")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Partnerships");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AllowBackorders")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AwarenessType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Barcode")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("CampaignId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Collection")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CompareAtPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("DimensionUnit")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("DonationAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DonationPercentage")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageUrls")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsOnSale")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LongDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int?>("MaxOrderQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int?>("MinOrderQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MissionStatement")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("PartnerOrganization")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int?>("PartnershipId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SKU")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Size")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Slug")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Subcategory")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Tags")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("TrackInventory")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WeightUnit")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("PartnershipId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AltText")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.ProductReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductReviews");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.ProductVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SKU")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Size")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Style")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductVariants");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Credentials")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EmailVerificationExpiry")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailVerificationToken")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailVerified")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmergencyContactName")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmergencyContactPhone")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmergencyContactRelationship")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("IndividualId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Organization")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneVerificationCode")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PhoneVerificationExpiry")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneVerified")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RefreshTokenExpiry")
                        .HasColumnType("TEXT");

                    b.Property<string>("RelationshipToRunner")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Specialization")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.Property<string>("TwoFactorBackupCodes")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TwoFactorSecret")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TwoFactorSetupDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("YearsOfExperience")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("IndividualId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.CaseDocument", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Individual", "Individual")
                        .WithMany("Documents")
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Individual");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.CaseImage", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Individual", "Individual")
                        .WithMany("Images")
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Individual");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.EmergencyContact", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Individual", "Individual")
                        .WithMany("EmergencyContacts")
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Individual");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.OrderItem", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.ProductVariant", "Variant")
                        .WithMany()
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("Variant");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Product", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Campaign", null)
                        .WithMany("Products")
                        .HasForeignKey("CampaignId");

                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Partnership", null)
                        .WithMany("Products")
                        .HasForeignKey("PartnershipId");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.ProductImage", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.ProductReview", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.ProductVariant", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Product", "Product")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.User", b =>
                {
                    b.HasOne("_241RunnersAwareness.BackendAPI.DBContext.Models.Individual", "Individual")
                        .WithMany()
                        .HasForeignKey("IndividualId");

                    b.Navigation("Individual");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Campaign", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Individual", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("EmergencyContacts");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Partnership", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("_241RunnersAwareness.BackendAPI.DBContext.Models.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Reviews");

                    b.Navigation("Variants");
                });
#pragma warning restore 612, 618
        }
    }
}
