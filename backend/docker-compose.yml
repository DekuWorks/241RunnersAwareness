version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: runners-db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrongPassword123!
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./sql:/sql
    networks:
      - runners-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrongPassword123! -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5

  # .NET Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: runners-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=RunnersDb;User Id=sa;Password=YourStrongPassword123!;TrustServerCertificate=True;MultipleActiveResultSets=true
      - Jwt__SecretKey=your-development-secret-key-change-in-production
      - Jwt__Issuer=241RunnersAwareness
      - Jwt__Audience=241RunnersAwareness
    ports:
      - "8080:8080"
    depends_on:
      sqlserver:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - runners-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for SignalR (optional)
  redis:
    image: redis:7-alpine
    container_name: runners-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - runners-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  sqlserver_data:
  redis_data:

networks:
  runners-network:
    driver: bridge
